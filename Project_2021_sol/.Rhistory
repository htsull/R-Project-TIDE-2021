filter("%French%")
complete_data %>%
select(language) %>%
filter("%French%")
complete_data %>%
select(str_detect(language))
complete_data %>%
select(language) %>%
filter(str_detect("%French%"))
#  Presentage of missng values
round(sapply(complete_data,function(x) sum(is.na(x))/length(x))*100, 3)
#  Presentage of missng values
round(sapply(complete_data,function(x) sum(is.na(x))/length(x))*100, 2)
paste("La variable Year est de type :", typeof(complete_data$year))
unique(complete_data$year)
# Select year column
complete_data$year <- complete_data$year %>%
#convert as numeric type
as.numeric %>%
#replace the NA value with 2019
replace_na(., 2019)
#show unique value of recently created year column
unique(complete_data$year)
#creation of the "decade variable"
complete_data$decade <- cut(complete_data$year,
breaks = c(seq(1890,
2020, 10)),
labels = c("1890 - 1900",
"1900 - 1910",
"1910 - 1920",
"1920 - 1930",
"1930 - 1940",
"1940 - 1950",
"1950 - 1960",
"1960 - 1970",
"1970 - 1980",
"1980 - 1990",
"1990 - 2000",
"2000 - 2010",
"2010 - 2020"),
right = F,
include.lowest = T)
#randomly select some line in year and decade columns to verify the results
complete_data %>%
select(year, decade)%>%
sample_n(50)
dt <- complete_data %>%
select(language, decade) %>%
group_by(decade) %>%
count(french = str_detect(language, "French|.French.")) %>%
mutate(p = scales::percent(n / sum(n))) %>%
filter(french == T)
ggplot(dt, aes(x=decade,y=n, fill=decade)) +
geom_bar(stat="identity", color="black")+
geom_text(aes(label=p), vjust=-0.3, size=3.5)+
theme_minimal() +
labs(title = "Représentation de la quantité de films dans lesquels la langue française apparait par décenie",
x = "Décennie", y = "Effectif")
dt <- complete_data %>%
select(language, decade) %>%
group_by(decade) %>%
count(french = str_detect(language, "French|.French.")) %>%
mutate(p = scales::percent(n / sum(n))) %>%
filter(french == T)
ggplot(dt, aes(x=decade,y=n, fill=decade)) +
geom_bar(stat="identity", color="black")+
geom_text(aes(label=p), vjust=-0.3, size=3.5)+
theme_minimal(axis.text.x = element_text(angle=90, vjust=.5, hjust=1)) +
labs(title = "Représentation de la quantité de films dans lesquels la langue française apparait par décenie",
x = "Décennie", y = "Effectif")
dt <- complete_data %>%
select(language, decade) %>%
group_by(decade) %>%
count(french = str_detect(language, "French|.French.")) %>%
mutate(p = scales::percent(n / sum(n))) %>%
filter(french == T)
ggplot(dt, aes(x=decade,y=n, fill=decade)) +
geom_bar(stat="identity", color="black")+
geom_text(aes(label=p), vjust=-0.3, size=3.5)+
theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1)) +
labs(title = "Représentation de la quantité de films dans lesquels la langue française apparait par décenie",
x = "Décennie", y = "Effectif")
dt <- complete_data %>%
select(language, decade) %>%
group_by(decade) %>%
count(french = str_detect(language, "French|.French.")) %>%
mutate(p = scales::percent(n / sum(n))) %>%
filter(french == T)
ggplot(dt, aes(x=decade,y=n, fill=decade)) +
geom_bar(stat="identity", color="black")+
geom_text(aes(label=p), vjust=0.3, size=3.5)+
theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1)) +
labs(title = "Représentation de la quantité de films dans lesquels la langue française apparait par décenie",
x = "Décennie", y = "Effectif")
dt <- complete_data %>%
select(language, decade) %>%
group_by(decade) %>%
count(french = str_detect(language, "French|.French.")) %>%
mutate(p = scales::percent(n / sum(n))) %>%
filter(french == T)
ggplot(dt, aes(x=decade,y=n, fill=decade)) +
geom_bar(stat="identity", color="black")+
geom_text(aes(label=p), vjust=-0.3, size=3.5)+
theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1)) +
labs(title = "Représentation de la quantité de films dans lesquels la langue française apparait par décenie",
x = "Décennie", y = "Effectif")
data <-complete_data %>%
select(starts_with("avg_vote_"))
report <- function(x, name) {
tibble(
variable  = name,
mean = round(mean(x, na.rm = FALSE), 2),
median = round(median(x, na.rm = FALSE), 2),
sd = round(sd(x), 2),
mad = round(mad(x, center = median(x), constant = 1.4826, na.rm = FALSE,
low = FALSE, high = FALSE), 2),
coef_de_var = round((sd(x)/mean(x))*100, 2),
max = round(max(x), 2),
min = round(min(x), 2)
)
}
Ind_Stat <- data %>% imap_dfr(report)
Ind_Stat
print(Ind_Stat)
print.table(Ind_Stat)
print_table(Ind_Stat)
print(table(Ind_Stat))
Ind_Stat
library(ggplot2)
moy <- ggplot(Ind_Stat, aes(x=variable, y=mean, fill=variable)) +
geom_bar(stat="identity", color="black")+
geom_text(aes(label=mean), vjust=-0.3, size=3.5)+
theme_minimal()
med <- ggplot(Ind_Stat, aes(x=variable, y=median, fill=variable)) +
geom_bar(stat="identity", color="black")+
geom_text(aes(label=median), vjust=-0.3, size=3.5)+
theme_minimal()
sd <- ggplot(Ind_Stat, aes(x=variable, y=sd, fill=variable)) +
geom_bar(stat="identity", color="black")+
geom_text(aes(label=sd), vjust=-0.3, size=3.5)+
theme_minimal()
mad <- ggplot(Ind_Stat, aes(x=variable, y=mad, fill=variable)) +
geom_bar(stat="identity", color="black")+
geom_text(aes(label=mad), vjust=-0.3, size=3.5)+
theme_minimal()
cv <- ggplot(Ind_Stat, aes(x=variable, y=coef_de_var, fill=variable)) +
geom_bar(stat="identity", color="black")+
geom_text(aes(label=coef_de_var), vjust=-0.3, size=3.5)+
theme_minimal()
max <- ggplot(Ind_Stat, aes(x=variable, y=max, fill=variable)) +
geom_bar(stat="identity", color="black")+
geom_text(aes(label=max), vjust=-0.3, size=3.5)+
theme_minimal()
min <- ggplot(Ind_Stat, aes(x=variable, y=min, fill=variable)) +
geom_bar(stat="identity", color="black")+
geom_text(aes(label=min), vjust=-0.3, size=3.5)+
theme_minimal()
library(cowplot)
plot_grid(moy, med, sd, mad, cv, max, min, labels = c("Moy", "Med",
"Sd", "Mad", "cv", "max", "min"), label_size = 14, hjust = -0.5, vjust =1.5, greedy = TRUE, byrow = T)
moy <- ggplot(Ind_Stat, aes(x=variable, y=mean, fill=variable)) +
geom_bar(stat="identity", color="black")+
geom_text(aes(label=mean), vjust=-0.3, size=3.5)+
theme_minimal()
med <- ggplot(Ind_Stat, aes(x=variable, y=median, fill=variable)) +
geom_bar(stat="identity", color="black")+
geom_text(aes(label=median), vjust=-0.3, size=3.5)+
theme_minimal()
sd <- ggplot(Ind_Stat, aes(x=variable, y=sd, fill=variable)) +
geom_bar(stat="identity", color="black")+
geom_text(aes(label=sd), vjust=-0.3, size=3.5)+
theme_minimal()
mad <- ggplot(Ind_Stat, aes(x=variable, y=mad, fill=variable)) +
geom_bar(stat="identity", color="black")+
geom_text(aes(label=mad), vjust=-0.3, size=3.5)+
theme_minimal()
cv <- ggplot(Ind_Stat, aes(x=variable, y=coef_de_var, fill=variable)) +
geom_bar(stat="identity", color="black")+
geom_text(aes(label=coef_de_var), vjust=-0.3, size=3.5)+
theme_minimal()
max <- ggplot(Ind_Stat, aes(x=variable, y=max, fill=variable)) +
geom_bar(stat="identity", color="black")+
geom_text(aes(label=max), vjust=-0.3, size=3.5)+
theme_minimal()
min <- ggplot(Ind_Stat, aes(x=variable, y=min, fill=variable)) +
geom_bar(stat="identity", color="black")+
geom_text(aes(label=min), vjust=-0.3, size=3.5)+
theme_minimal()
plot_grid(moy, med, sd, mad, cv, max, min, labels = c("Moy", "Med",
"Sd", "Mad", "cv", "max", "min"), label_size = 14, hjust = -0.5, vjust =1.5, greedy = TRUE, byrow = T)
ggplot(Ind_Stat, aes(x=variable, y=min, fill=variable)) +
geom_bar(stat="identity", color="black")+
geom_text(aes(label=min), vjust=-0.3, size=3.5)+
theme_minimal()
ggplot(Ind_Stat, aes(x=variable, y=mean, fill=variable)) +
geom_bar(stat="identity", color="black")+
geom_text(aes(label=mean), vjust=-0.3, size=3.5)+
theme_minimal()
ggplot(Ind_Stat, aes(x=variable, y=median, fill=variable)) +
geom_bar(stat="identity", color="black")+
geom_text(aes(label=median), vjust=-0.3, size=3.5)+
theme_minimal()
ggplot(Ind_Stat, aes(x=variable, y=sd, fill=variable)) +
geom_bar(stat="identity", color="black")+
geom_text(aes(label=sd), vjust=-0.3, size=3.5)+
theme_minimal()
ggplot(Ind_Stat, aes(x=variable, y=mad, fill=variable)) +
geom_bar(stat="identity", color="black")+
geom_text(aes(label=mad), vjust=-0.3, size=3.5)+
theme_minimal()
ggplot(Ind_Stat, aes(x=variable, y=coef_de_var, fill=variable)) +
geom_bar(stat="identity", color="black")+
geom_text(aes(label=coef_de_var), vjust=-0.3, size=3.5)+
theme_minimal()
ggplot(Ind_Stat, aes(x=variable, y=max, fill=variable)) +
geom_bar(stat="identity", color="black")+
geom_text(aes(label=max), vjust=-0.3, size=3.5)+
theme_minimal()
ggplot(Ind_Stat, aes(x=variable, y=min, fill=variable)) +
geom_bar(stat="identity", color="black")+
geom_text(aes(label=min), vjust=-0.3, size=3.5)+
theme_minimal()
# library(cowplot)
# plot_grid(moy, med, sd, mad, cv, max, min, labels = c("Moy", "Med",
#                                                       "Sd", "Mad", "cv", "max", "min"), label_size = 14, hjust = -0.5, vjust =1.5, greedy = TRUE, byrow = T)
dt %>%
select(note_exam, note_projet) %>%
pivot_longer(cols = c("note_exam", "note_projet")) %>%
ggplot(aes(x = value, color = name)) +
stat_ecdf() +
labs(x = "Note", y = "% d'Ã©tudiants") +
theme(axis.title = element_text(face = "bold"))
# 1
dt <- read_excel("C:/Users/cleme/Downloads/M2TIDE_note_2017_to_2018.xlsx")
library(readxl)
library(tidyverse)
# 1
dt <- read_excel("C:/Users/cleme/Downloads/M2TIDE_note_2017_to_2018.xlsx")
dt %>%
select(note_exam, note_projet) %>%
pivot_longer(cols = c("note_exam", "note_projet")) %>%
ggplot(aes(x = value, color = name)) +
stat_ecdf() +
labs(x = "Note", y = "% d'Ã©tudiants") +
theme(axis.title = element_text(face = "bold"))
library(readxl)
library(tidyverse)
# 1
dt <- read_excel("C:/Users/cleme/Downloads/M2TIDE_note_2017_to_2018.xlsx")
# 2
glimpse(dt)
# 3
funModeling::df_status(dt)
# 4
names(dt) <- str_replace_all(names(dt), " ", "_")
# 5
dt <- dt %>%
mutate_at(vars(starts_with("note")),
function(x){
ifelse(x == "ABSENT", NA, x) %>%
as.numeric()
})
dt <- dt %>% mutate(year_promo = as.character(year_promo))
dt %>%
select_if(is.numeric) %>%
summary()
# 6
dt %>%
count(year_promo)
# 7
dt %>%
count(year_promo, bonus) %>%
group_by(year_promo) %>%
mutate(p = scales::percent(n / sum(n))) %>%
filter(bonus == "T")
# 8
dt %>%
group_by(year_promo) %>%
summarise_if(is.numeric,
list(moy = function(x) mean(x, na.rm = T),
ec = function(x) sd(x, na.rm = T)))
# 9
dt %>%
count(year_promo, sexe) %>%
group_by(year_promo) %>%
mutate(p = n / sum(n)) %>%
ggplot(aes(x = sexe, y = p, color = sexe)) +
geom_point(size = 2) +
geom_segment(aes(x = sexe, xend = sexe,
y = 0, yend = p)) +
geom_text(aes(label = n, y = p, vjust = -0.4)) +
scale_y_continuous(labels = scales::percent) +
labs(x = "Sexe", y = "Proportion d'Ã©tudiants") +
theme(legend.position = "none") +
facet_wrap(~ year_promo)
# 10
dt_cor <- dt %>%
group_by(year_promo) %>%
summarise(cor = cor(note_exam, note_projet,
use = "complete.obs"))
ggplot(dt, aes(x = note_exam,
y = note_projet,
color = year_promo)) +
geom_point(size = 2) +
geom_smooth(method = "lm", se = F) +
geom_label(data = dt_cor,
aes(label = paste("cor:", round(cor, 2)),
x = Inf,
y = 3,
hjust = 1.2)) +
facet_wrap(~ year_promo, scales = "free") +
theme(legend.position = "none") +
labs(x = "Note examen", y = "Note projet")
# 11
dt %>%
filter(year_promo != "2020") %>%
count(sexe, bonus) %>%
group_by(sexe) %>%
mutate(p = n / sum(n))
# 12
ggplot(dt, aes(x = note_exam, color = sexe)) +
stat_ecdf() +
scale_x_continuous(breaks = seq(0, 26, 2)) +
scale_y_continuous(breaks = seq(0, 1, 0.1),
labels = scales::percent) +
labs(x = "Note examen", y = "% d'Ã©tudiants")
# 13
dt %>%
select(note_exam, note_projet) %>%
pivot_longer(cols = c("note_exam", "note_projet")) %>%
ggplot(aes(x = value, color = name)) +
stat_ecdf() +
labs(x = "Note", y = "% d'Ã©tudiants") +
theme(axis.title = element_text(face = "bold"))
ks.test(dt$note_exam, dt$note_projet)
ggplot(complete_data, mapping = aes(x=genre, y=votes))+
geom_boxplot()
ggplot(complete_data, mapping = aes(x=genre, y=votes))+
geom_boxplot()
ggplot(complete_data) +
aes(x=genre, y=votes, fill="genre", colour="genre") +
geom_boxplot() +
xlab("Genre du cinéma") +
ylab("Votes") +
ggtitle("Répartition de notation en fonction du genre de film")
complete_data %>%
group_by(genre) %>%
summarise(moy_votes=mean(votes),
max_votes=max(votes),
min_votes=min(votes),
sd_votes=sd(votes))
votes
View(complete_data)
View(table(complete_data$genre))
top_10_film <- complete_data %>%
arrange(votes) %>%
slice(1:10)
top_10_film
typeof(complete_data$votes)
top_10_film <- complete_data %>%
arrange(votes) %>%
sort(10)
top_10_film <- complete_data %>%
arrange(votes) %>%
sort()
complete_data %>%
arrange(votes)
top_10_film <- complete_data %>%
arrange(votes)
top_10_film
View(top_10_film)
top_10_film <- complete_data %>%
arrange(votes) %>%
head(10)
top_10_film
top_10_film <- complete_data %>%
arrange(votes) %>%
head(10) %>% select(votes, original_title
)
top_10_film
top_10_film <- complete_data %>%
arrange(votes) %>%
tail(10) %>% select(votes, original_title
)
top_10_film
top_10_film <- complete_data %>%
arrange(votes) %>%
select(votes, original_title) %>%
sort(votes, decreasing = T)
top_10_film <- complete_data %>%
arrange(votes) %>%
select(votes, original_title) %>%
sort(decreasing = T)
top_10_film <- complete_data %>%
arrange(votes) %>%
select(votes, original_title) %>%
sort()
top_10_film <- complete_data %>%
select(votes, original_title) %>%
arrange(votes)
top_10_film
top_10_film <- complete_data %>%
select(votes, original_title) %>%
arrange()
top_10_film
top_10_film <- complete_data %>%
select(votes, original_title) %>%
arrange(votes)
top_10_film
top_10_film <- complete_data %>%
select(votes, original_title) %>%
arrange(votes, desc(votes))
top_10_film
top_10_film <- complete_data %>%
select(votes, original_title) %>%
arrange(desc(votes))
top_10_film
top_10_film <- complete_data %>%
select(votes, original_title) %>%
arrange(desc(votes)) %>%
head(10)
top_10_film
top_10_film <- complete_data %>%
select(votes, original_title) %>%
arrange(desc(votes)) %>%
head(10)
top_10_film
top_10_film <- complete_data %>%
# select(votes, original_title) %>%
arrange(desc(votes)) %>%
head(10)
top_10_film
top_10_film <- complete_data %>%
select(votes, genre) %>%
arrange(desc(votes)) %>%
head(10)
top_10_film
ggplot(top_10_film, aes(x=genre,y=votes, fill=genre)) +
geom_bar(stat="identity", color="black")+
theme_minimal() +
labs(title = "représenter graphiquement le top 10 des films les mieux notés",
x = "Genre", y = "Nbre_de_votes")
complete_data %>% select(genre) %>% unique()
genre1 <- complete_data %>% select(genre)
genre2 <- paste(genre1, collapse = ',')
genre3 <- strsplit(genre2, ",")
genre4 <- genre3[[1]] %>% unique
genre4
genre4 <- genre3[[1]] %>% unique %>% sort %>% as.list()
genre4
genre2 <- paste(genre1, collapse = ',')
genre2
genre1
genre2
genre2 <- paste0(genre1, collapse = ',')
genre2
genre3 <- strsplit(genre2, ",")
genre3
genre4 <- gsub('\"',"",x = genre3)
genre4
genre3 <- strsplit(genre2, ",")
genre3
genre2
genre1 <- complete_data$genre
genre1
genre2 <- paste0(genre1, collapse = ',')
genre2
genre3 <- strsplit(genre2, ",")
genre3
genre4 <- genre3[[1]] %>% unique %>% sort %>% as.list()
genre4
genre4 <- genre3[[1]] %>% unique %>% sort
genre4
uniGenre <- function(vect_){
genre1 <- vect_
genre2 <- paste0(genre1, collapse = ',')
genre3 <- strsplit(genre2, ",")
genre4 <- genre3[[1]] %>% unique %>% sort
return(genre4)
}
uniGenre(complete_data$genre)
complete_data[complete_data$genre == "Action"] %>% length()
complete_data[complete_data$genre == "Action"]
complete_data[complete_data$genre == "Action"]
complete_data %>% select(genre)
complete_data[complete_data$genre == "Action"]
complete_data %>% select(genre)
complete_data[complete_data$genre == "Action"]
complete_data$genre[complete_data$genre == "Action"]
complete_data$genre[complete_data$genre == "Action"] %>% length()
complete_data$genre[complete_data$genre == str_detect(language, "French|.French.")] %>% length()
complete_data$genre[complete_data$genre == str_detect(genre, "Action|.Action.")] %>% length()
complete_data$genre[complete_data$genre == str_detect("Action|.Action.")] %>% length()
complete_data$genre[complete_data$genre == str_detect(complete_data$genre, "Action|.Action.")] %>% length()
complete_data$genre[complete_data$genre == str_detect(complete_data$genre, "Action")] %>% length()
complete_data$genre[complete_data$genre == str_detect(complete_data$genre, "Action")] %>% length()
complete_data$genre[complete_data$genre == "Action"] %>% length()
complete_data$genre[complete_data$genre == paste0("%Action%")] %>% length()
complete_data$genre[complete_data$genre == paste0("Action")] %>% length()
complete_data$genre[complete_data$genre == paste0(".Action.")] %>% length()
complete_data$genre[complete_data$genre == paste0("Action")] %>% length()
complete_data$genre[complete_data$genre == paste0("Drama")] %>% length()
complete_data$genre[complete_data$genre == contains("Drama")] %>% length()
complete_data[grepl('Action', complete_data$genre)] %>% length()
complete_data$genre[grepl('Action', complete_data$genre)] %>% length()
fon <- uniGenre(complete_data$genre)
complete_data$genre[grepl('Action', complete_data$genre)]
complete_data$original_title[grepl('Action', complete_data$genre)]
complete_data$genre[grepl(i, complete_data$genre)] %>% lcount
complete_data$original_title[grepl('Action', complete_data$genre)] %>% count
complete_data$original_title[grepl('Action', complete_data$genre)] %>% count
complete_data$original_title[grepl('Action', complete_data$genre)] %>% length()
