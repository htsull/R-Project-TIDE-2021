dt <- complete_data %>%
filter(grepl(x, genre))
return (mean(dt$avg_vote))
}
note_film_genre <- genre %>%
sapply(avg_vote_genre)
note_film_genre <- as.data.frame(note_film_genre)
names(note_film_genre)<- "avg_vote"
df_avg_vote_genre <- data.frame(genre, avg_vote=as.vector(note_film_genre))
ggplot(df_avg_vote_genre, aes(y = avg_vote, x =fct_rev(fct_reorder(genre, avg_vote,.fun="median")),color = genre)) +
geom_point(size=1.5)+
geom_segment(aes(x=genre, xend = genre, y=0, yend=avg_vote), fill=genre)+
geom_text(aes(label=round(avg_vote, 1), y=avg_vote, vjust=-0.4))+
labs(x="genres de film", y="Notation en fonction du genre")+
theme(legend.position = "none", axis.text.x = element_text(angle = 90, hjust = 1, vjust=.4, size = 10, colour =rainbow(25)), axis.title = element_text(size = 14))+
theme( axis.line = element_line(colour = "darkblue",
size = 1, linetype = "solid"))
ggplot(data = complete_data, aes(x = genre, y = avg_vote, color = genre)) +
theme(axis.text.x = element_text(vjust=.8, hjust=1, angle=60)) +
geom_boxplot(aes(fill = genre)) +
xlab("top 10 des films") +
ylab("Note") +
ggtitle("représentation graphique du top\n 10 des films les mieux notés")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
#Attach the necessary libraries
library(dplyr)
library(readr)
library(DT)
#1. Capture the raw pat of the zip folder
raw_path <- "./movies.zip"
#2. unzip the folder
data <- unzip(raw_path, files = NULL, list = F, exdir = "movie_unzip")
#3. Capture the new path to the folder that contains the datasets
path_ <- "./movie_unzip"
#4. Create a function to merge all the datasets
merge_df = function(path_to_folder){
#capture the names of the files in the folder
list_name_file = list.files(path = path_to_folder, full.names = T)
#read all the files in the folder
data_list = lapply(list_name_file, function(x){
read.csv(file = x, header = TRUE)
}) #x --> names of the files to read (in this case 'list_name_file')
#combine the datasets with the reduce function
#after merging them two by two (merge function)
Reduce(function(x, y){merge(x, y, all = T)}, data_list)
}
#5. Store the complete merged dataset
# df <- merge_df(path_)
# write.csv(x = df, file = "complete_data.csv")
complete_data <- read.csv(file = "./complete_data.csv", header = T)
sapply(complete_data,function(x) sum(is.na(x)))
complete_data[complete_data == ""]<- NA # Remplacer les vides par des NAs.
sapply(complete_data,function(x) sum(is.na(x)))
#  Presentage of missng values
na_percent <- round(sapply(complete_data,function(x) sum(is.na(x))/length(x))*100, 2)
print.table(na_percent)
library(tidyverse)
complete_data$duration <- as.numeric(complete_data$duration)
ggplot(complete_data, aes(x = duration, fill = duration)) +
geom_histogram(color = "green", binwidth = 50, alpha = 1)  +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title = 'Représentation graphique de la durée des films', x = 'Durée', y = 'Effectif') +
scale_y_continuous(n.breaks = 15) +
scale_x_continuous(n.breaks = 15)
library(stringr)
complete_data %>%
filter(str_detect(language, "French|.French.")) %>%
select(language) %>%
count() %>%
paste(.,'films sont disponibles en francais')
paste("La variable Year est de type :", typeof(complete_data$year))
unique(complete_data$year)
# Select year column
complete_data$year <- complete_data$year %>%
#convert as numeric type
as.numeric %>%
#replace the NA value with 2019
replace_na(., 2019)
#show unique value of recently created year column
unique(complete_data$year)
#creation of the "decade variable"
complete_data$decade <- cut(complete_data$year,
breaks = c(seq(1890,
2020, 10)),
labels = c("1890 - 1900",
"1900 - 1910",
"1910 - 1920",
"1920 - 1930",
"1930 - 1940",
"1940 - 1950",
"1950 - 1960",
"1960 - 1970",
"1970 - 1980",
"1980 - 1990",
"1990 - 2000",
"2000 - 2010",
"2010 - 2020"),
right = F,
include.lowest = T)
#randomly select some line in year and decade columns to verify the results
complete_data %>%
select(year, decade)%>%
sample_n(50) %>% datatable()
#creation of the "decade variable"
complete_data$decade <- cut(complete_data$year,
breaks = c(seq(1890,
2020, 10)),
labels = c("1890 - 1900",
"1900 - 1910",
"1910 - 1920",
"1920 - 1930",
"1930 - 1940",
"1940 - 1950",
"1950 - 1960",
"1960 - 1970",
"1970 - 1980",
"1980 - 1990",
"1990 - 2000",
"2000 - 2010",
"2010 - 2020"),
right = F,
include.lowest = T)
#randomly select some line in year and decade columns to verify the results
complete_data %>%
select(year, decade)%>%
sample_n(50) %>% datatable()
dt <- complete_data %>%
select(language, decade) %>%
group_by(decade) %>%
count(french = str_detect(language, "French|.French.")) %>%
mutate(p = scales::percent(n / sum(n))) %>%
filter(french == T)
ggplot(dt, aes(x=decade,y=n, fill=decade)) +
geom_bar(stat="identity", color="black")+
geom_text(aes(label=p), vjust=-0.3, size=3.5)+
theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1)) +
labs(title = "Représentation de la quantité de films dans lesquels\n la langue française apparait par décenie",
x = "Décennie", y = "Effectif")
dt <- complete_data %>%
select(language, decade) %>%
group_by(decade) %>%
count(french = str_detect(language, "French|.French.")) %>%
mutate(p = scales::percent(n / sum(n))) %>%
filter(french == T)
ggplot(dt, aes(x=decade,y=n, fill=decade)) +
geom_bar(stat="identity", color="black")+
geom_text(aes(label=p), vjust=-0.3, size=3.5)+
theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1, colour =rainbow(11))) +
labs(title = "Représentation de la quantité de films dans lesquels\n la langue française apparait par décenie",
x = "Décennie", y = "Effectif")
ggplot(Ind_Stat, aes(x=variable, y=mean, fill=variable)) +
geom_bar(stat="identity", color="black")+
geom_text(aes(label=mean), vjust=-0.3, size=3.5)+
theme_minimal()
ggplot(Ind_Stat, aes(x=variable, y=median, fill=variable)) +
geom_bar(stat="identity", color="black")+
geom_text(aes(label=median), vjust=-0.3, size=3.5)+
theme_minimal()
ggplot(Ind_Stat, aes(x=variable, y=sd, fill=variable)) +
geom_bar(stat="identity", color="black")+
geom_text(aes(label=sd), vjust=-0.3, size=3.5)+
theme_minimal()
ggplot(Ind_Stat, aes(x=variable, y=mad, fill=variable)) +
geom_bar(stat="identity", color="black")+
geom_text(aes(label=mad), vjust=-0.3, size=3.5)+
theme_minimal()
ggplot(Ind_Stat, aes(x=variable, y=coef_de_var, fill=variable)) +
geom_bar(stat="identity", color="black")+
geom_text(aes(label=coef_de_var), vjust=-0.3, size=3.5)+
theme_minimal()
ggplot(Ind_Stat, aes(x=variable, y=max, fill=variable)) +
geom_bar(stat="identity", color="black")+
geom_text(aes(label=max), vjust=-0.3, size=3.5)+
theme_minimal()
ggplot(Ind_Stat, aes(x=variable, y=min, fill=variable)) +
geom_bar(stat="identity", color="black")+
geom_text(aes(label=min), vjust=-0.3, size=3.5)+
theme_minimal()
# library(cowplot)
# plot_grid(moy, med, sd, mad, cv, max, min, labels = c("Moy", "Med",
#                                                       "Sd", "Mad", "cv", "max", "min"), label_size = 14, hjust = -0.5, vjust =1.5, greedy = TRUE, byrow = T)
uni_ <- function(data){
data %>%
paste(., collapse = ",") %>%
str_replace_all(., fixed(" "), "") %>%
strsplit(., ",") %>%
unlist() %>%
unique() %>%
sort
}
gen <- uni_(complete_data$genre);gen
uni_ <- function(data){
data %>%
paste(., collapse = ",") %>%
str_replace_all(., fixed(" "), "") %>%
strsplit(., ",") %>%
unlist() %>%
unique() %>%
sort
}
gen <- uni_(complete_data$genre);gen   # Visualiser le nombre de genres différents de la data
avg_vote_genre <- function(x){
dt <- complete_data %>%
filter(grepl(x, genre))
return (mean(dt$avg_vote))
}
note_film_genre <- genre %>%
sapply(avg_vote_genre)
note_film_genre <- as.data.frame(note_film_genre)
names(note_film_genre)<- "avg_vote"
df_avg_vote_genre <- data.frame(genre, avg_vote=as.vector(note_film_genre))
ggplot(df_avg_vote_genre, aes(y = avg_vote, x =fct_rev(fct_reorder(genre, avg_vote,.fun="median")),color = genre)) +
geom_point(size=1.5)+
geom_segment(aes(x=genre, xend = genre, y=0, yend=avg_vote), fill=genre)+
geom_text(aes(label=round(avg_vote, 1), y=avg_vote, vjust=-0.4))+
labs(title = "Notation en fonction du genre", x="genres de film", y="Notes")+
theme(legend.position = "none", axis.text.x = element_text(angle = 90, hjust = 1, vjust=.4, size = 10, colour =rainbow(25)), axis.title = element_text(size = 14))+
theme( axis.line = element_line(colour = "darkblue",
size = 1, linetype = "solid"))
avg_vote_genre <- function(x){
dt <- complete_data %>%
filter(grepl(x, genre))
return (mean(dt$avg_vote))
}
note_film_genre <- genre %>%
sapply(avg_vote_genre)
note_film_genre <- as.data.frame(note_film_genre)
names(note_film_genre)<- "avg_vote"
df_avg_vote_genre <- data.frame(genre, avg_vote=as.vector(note_film_genre))
ggplot(df_avg_vote_genre, aes(y = avg_vote, x =fct_rev(fct_reorder(genre, avg_vote,.fun="median")),color = genre)) +
geom_point(size=1.5)+
geom_segment(aes(x=genre, xend = genre, y=0, yend=avg_vote), fill=genre)+
geom_text(aes(label=round(avg_vote, 1), y=avg_vote, vjust=-0.4))+
labs(title = "Notation en fonction du genre de film", x="genres de film", y="Notes")+
theme(legend.position = "none", axis.text.x = element_text(angle = 90, hjust = 1, vjust=.4, size = 10, colour =rainbow(25)), axis.title = element_text(size = 14))+
theme( axis.line = element_line(colour = "darkblue",
size = 1, linetype = "solid"))
Ac <- complete_data %>%
filter(str_detect(genre, "Action")) %>%
select(avg_vote, title) %>%
arrange(desc(avg_vote)) %>%
head(10)
ggplot(Ac, aes(y = avg_vote, x =fct_rev(fct_reorder(title, avg_vote,.fun="median")),color = title)) +
theme(axis.text.x = element_text(vjust=.8, hjust=1, angle=60)) +
geom_boxplot(aes(fill = title)) +
xlab("Films") +
ylab("Notes") +
ggtitle("Top 10 des films du genre\n Action les mieux notés ")
Ad <- complete_data %>%
filter(str_detect(genre, "Adult")) %>%
select(avg_vote, title) %>%
arrange(desc(avg_vote)) %>%
head(10)
ggplot(Ad, aes(y = avg_vote, x =fct_rev(fct_reorder(title, avg_vote,.fun="median")),color = title)) +
theme(axis.text.x = element_text(vjust=.8, hjust=1, angle=60)) +
geom_boxplot(aes(fill = title)) +
xlab("Films") +
ylab("Notes") +
ggtitle("Top 10 des films du genre\n Adult les mieux notés ")
Adv <- complete_data %>%
filter(str_detect(genre, "Adventure")) %>%
select(avg_vote, title) %>%
arrange(desc(avg_vote)) %>%
head(10)
ggplot(Adv, aes(y = avg_vote, x =fct_rev(fct_reorder(title, avg_vote,.fun="median")),color = title)) +
theme(axis.text.x = element_text(vjust=.8, hjust=1, angle=60)) +
geom_boxplot(aes(fill = title)) +
xlab("Films") +
ylab("Notes") +
ggtitle("Top 10 des films du genre\n Adventure les mieux notés ")
Ani <- complete_data %>%
filter(str_detect(genre, "Animation")) %>%
select(avg_vote, title) %>%
arrange(desc(avg_vote)) %>%
head(10)
ggplot(Ani, aes(y = avg_vote, x =fct_rev(fct_reorder(title, avg_vote,.fun="median")),color = title)) +
theme(axis.text.x = element_text(vjust=.8, hjust=1, angle=60)) +
geom_boxplot(aes(fill = title)) +
xlab("Films") +
ylab("Notes") +
ggtitle("Top 10 des films du genre\n Animation les mieux notés ")
Bio <- complete_data %>%
filter(str_detect(genre, "Biography")) %>%
select(avg_vote, title) %>%
arrange(desc(avg_vote)) %>%
head(10)
ggplot(Bio, aes(y = avg_vote, x =fct_rev(fct_reorder(title, avg_vote,.fun="median")),color = title)) +
theme(axis.text.x = element_text(vjust=.8, hjust=1, angle=60)) +
geom_boxplot(aes(fill = title)) +
xlab("Films") +
ylab("Notes") +
ggtitle("Top 10 des films du genre\n Biography les mieux notés ")
Co <- complete_data %>%
filter(str_detect(genre, "Comedy")) %>%
select(avg_vote, title) %>%
arrange(desc(avg_vote)) %>%
head(10)
ggplot(Co, aes(y = avg_vote, x =fct_rev(fct_reorder(title, avg_vote,.fun="median")),color = title)) +
theme(axis.text.x = element_text(vjust=.8, hjust=1, angle=60)) +
geom_boxplot(aes(fill = title)) +
xlab("Films") +
ylab("Notes") +
ggtitle("Top 10 des films du genre\n Comedy les mieux notés ")
Cr <- complete_data %>%
filter(str_detect(genre, "Crime")) %>%
select(avg_vote, title) %>%
arrange(desc(avg_vote)) %>%
head(10)
ggplot(Cr, aes(y = avg_vote, x =fct_rev(fct_reorder(title, avg_vote,.fun="median")),color = title)) +
theme(axis.text.x = element_text(vjust=.8, hjust=1, angle=60)) +
geom_boxplot(aes(fill = title)) +
xlab("Films") +
ylab("Notes") +
ggtitle("Top 10 des films du genre\n Crime les mieux notés ")
Doc <- complete_data %>%
filter(str_detect(genre, "Documentary")) %>%
select(avg_vote, title) %>%
arrange(desc(avg_vote)) %>%
head(10)
ggplot(Doc, aes(y = avg_vote, x =fct_rev(fct_reorder(title, avg_vote,.fun="median")),color = title)) +
theme(axis.text.x = element_text(vjust=.8, hjust=1, angle=60)) +
geom_boxplot(aes(fill = title)) +
xlab("Films") +
ylab("Notes") +
ggtitle("Top 10 des films du genre\n Documentary les mieux notés ")
Dra <- complete_data %>%
filter(str_detect(genre, "Drama")) %>%
select(avg_vote, title) %>%
arrange(desc(avg_vote)) %>%
head(10)
ggplot(Dra, aes(y = avg_vote, x =fct_rev(fct_reorder(title, avg_vote,.fun="median")),color = title)) +
theme(axis.text.x = element_text(vjust=.8, hjust=1, angle=60)) +
geom_boxplot(aes(fill = title)) +
xlab("Films") +
ylab("Notes") +
ggtitle("Top 10 des films du genre\n Drama les mieux notés ")
Fam <- complete_data %>%
filter(str_detect(genre, "Family")) %>%
select(avg_vote, title) %>%
arrange(desc(avg_vote)) %>%
head(10)
ggplot(Fam, aes(y = avg_vote, x =fct_rev(fct_reorder(title, avg_vote,.fun="median")),color = title)) +
theme(axis.text.x = element_text(vjust=.8, hjust=1, angle=60)) +
geom_boxplot(aes(fill = title)) +
xlab("Films") +
ylab("Notes") +
ggtitle("Top 10 des films du genre\n Family les mieux notés ")
Fan <- complete_data %>%
filter(str_detect(genre, "Fantasy")) %>%
select(avg_vote, title) %>%
arrange(desc(avg_vote)) %>%
head(10)
ggplot(Fan, aes(y = avg_vote, x =fct_rev(fct_reorder(title, avg_vote,.fun="median")),color = title)) +
theme(axis.text.x = element_text(vjust=.8, hjust=1, angle=60)) +
geom_boxplot(aes(fill = title)) +
xlab("Films") +
ylab("Notes") +
ggtitle("Top 10 des films du genre\n Fantasy les mieux notés ")
Film <- complete_data %>%
filter(str_detect(genre, "Film-Noir")) %>%
select(avg_vote, title) %>%
arrange(desc(avg_vote)) %>%
head(10)
ggplot(Film, aes(y = avg_vote, x =fct_rev(fct_reorder(title, avg_vote,.fun="median")),color = title)) +
theme(axis.text.x = element_text(vjust=.8, hjust=1, angle=60)) +
geom_boxplot(aes(fill = title)) +
xlab("Films") +
ylab("Notes") +
ggtitle("Top 10 des films du genre\n Film-Noir les mieux notés ")
His <- complete_data %>%
filter(str_detect(genre, "History")) %>%
select(avg_vote, title) %>%
arrange(desc(avg_vote)) %>%
head(10)
ggplot(His, aes(y = avg_vote, x =fct_rev(fct_reorder(title, avg_vote,.fun="median")),color = title)) +
theme(axis.text.x = element_text(vjust=.8, hjust=1, angle=60)) +
geom_boxplot(aes(fill = title)) +
xlab("Films") +
ylab("Notes") +
ggtitle("Top 10 des films du genre\n History les mieux notés ")
Ho <- complete_data %>%
filter(str_detect(genre, "Horror")) %>%
select(avg_vote, title) %>%
arrange(desc(avg_vote)) %>%
head(10)
ggplot(Ho, aes(y = avg_vote, x =fct_rev(fct_reorder(title, avg_vote,.fun="median")),color = title)) +
theme(axis.text.x = element_text(vjust=.8, hjust=1, angle=60)) +
geom_boxplot(aes(fill = title)) +
xlab("Films") +
ylab("Notes") +
ggtitle("Top 10 des films du genre\n Horror les mieux notés ")
Mus <- complete_data %>%
filter(str_detect(genre, "Music")) %>%
select(avg_vote, title) %>%
arrange(desc(avg_vote)) %>%
head(10)
ggplot(Mus, aes(y = avg_vote, x =fct_rev(fct_reorder(title, avg_vote,.fun="median")),color = title)) +
theme(axis.text.x = element_text(vjust=.8, hjust=1, angle=60)) +
geom_boxplot(aes(fill = title)) +
xlab("Films") +
ylab("Notes") +
ggtitle("Top 10 des films du genre\n Music les mieux notés ")
Mu <- complete_data %>%
filter(str_detect(genre, "Musical")) %>%
select(avg_vote, title) %>%
arrange(desc(avg_vote)) %>%
head(10)
ggplot(Mu, aes(y = avg_vote, x =fct_rev(fct_reorder(title, avg_vote,.fun="median")),color = title)) +
theme(axis.text.x = element_text(vjust=.8, hjust=1, angle=60)) +
geom_boxplot(aes(fill = title)) +
xlab("Films") +
ylab("Notes") +
ggtitle("Top 10 des films du genre\n Musical les mieux notés ")
Mys <- complete_data %>%
filter(str_detect(genre, "Mystery")) %>%
select(avg_vote, title) %>%
arrange(desc(avg_vote)) %>%
head(10)
ggplot(Mys, aes(y = avg_vote, x =fct_rev(fct_reorder(title, avg_vote,.fun="median")),color = title)) +
theme(axis.text.x = element_text(vjust=.8, hjust=1, angle=60)) +
geom_boxplot(aes(fill = title)) +
xlab("Films") +
ylab("Notes") +
ggtitle("Top 10 des films du genre\n Mystery les mieux notés ")
News <- complete_data %>%
filter(str_detect(genre, "News")) %>%
select(avg_vote, title) %>%
arrange(desc(avg_vote)) %>%
head(10)
ggplot(News, aes(y = avg_vote, x =fct_rev(fct_reorder(title, avg_vote,.fun="median")),color = title)) +
theme(axis.text.x = element_text(vjust=.8, hjust=1, angle=60)) +
geom_boxplot(aes(fill = title)) +
xlab("Films") +
ylab("Notes") +
ggtitle("Top 10 des films du genre\n News les mieux notés ")
Real <- complete_data %>%
filter(str_detect(genre, "Reality-TV")) %>%
select(avg_vote, title) %>%
arrange(desc(avg_vote)) %>%
head(10)
ggplot(Real, aes(y = avg_vote, x =fct_rev(fct_reorder(title, avg_vote,.fun="median")),color = title)) +
theme(axis.text.x = element_text(vjust=.8, hjust=1, angle=60)) +
geom_boxplot(aes(fill = title)) +
xlab("Films") +
ylab("Notes") +
ggtitle("Top 10 des films du genre\n Reality-TV les mieux notés ")
Ro <- complete_data %>%
filter(str_detect(genre, "Romance")) %>%
select(avg_vote, title) %>%
arrange(desc(avg_vote)) %>%
head(10)
ggplot(Ro, aes(y = avg_vote, x =fct_rev(fct_reorder(title, avg_vote,.fun="median")),color = title)) +
theme(axis.text.x = element_text(vjust=.8, hjust=1, angle=60)) +
geom_boxplot(aes(fill = title)) +
xlab("Films") +
ylab("Notes") +
ggtitle("Top 10 des films du genre\n Romance les mieux notés ")
Sci <- complete_data %>%
filter(str_detect(genre, "Sci-Fi")) %>%
select(avg_vote, title) %>%
arrange(desc(avg_vote)) %>%
head(10)
ggplot(Sci, aes(y = avg_vote, x =fct_rev(fct_reorder(title, avg_vote,.fun="median")),color = title)) +
theme(axis.text.x = element_text(vjust=.8, hjust=1, angle=60)) +
geom_boxplot(aes(fill = title)) +
xlab("Films") +
ylab("Notes") +
ggtitle("Top 10 des films du genre\n Sci-Fi les mieux notés ")
Sp <- complete_data %>%
filter(str_detect(genre, "Sport")) %>%
select(avg_vote, title) %>%
arrange(desc(avg_vote)) %>%
head(10)
ggplot(Sp, aes(y = avg_vote, x =fct_rev(fct_reorder(title, avg_vote,.fun="median")),color = title)) +
theme(axis.text.x = element_text(vjust=.8, hjust=1, angle=60)) +
geom_boxplot(aes(fill = title)) +
xlab("Films") +
ylab("Notes") +
ggtitle("Top 10 des films du genre\n Sport les mieux notés ")
Thr <- complete_data %>%
filter(str_detect(genre, "Thriller")) %>%
select(avg_vote, title) %>%
arrange(desc(avg_vote)) %>%
head(10)
ggplot(Thr, aes(y = avg_vote, x =fct_rev(fct_reorder(title, avg_vote,.fun="median")),color = title)) +
theme(axis.text.x = element_text(vjust=.8, hjust=1, angle=60)) +
geom_boxplot(aes(fill = title)) +
xlab("Films") +
ylab("Notes") +
ggtitle("Top 10 des films du genre\n Thriller les mieux notés ")
Wa <- complete_data %>%
filter(str_detect(genre, "War")) %>%
select(avg_vote, title) %>%
arrange(desc(avg_vote)) %>%
head(10)
ggplot(Wa, aes(y = avg_vote, x =fct_rev(fct_reorder(title, avg_vote,.fun="median")),color = title)) +
theme(axis.text.x = element_text(vjust=.8, hjust=1, angle=60)) +
geom_boxplot(aes(fill = title)) +
xlab("Films") +
ylab("Notes") +
ggtitle("Top 10 des films du genre\n War les mieux notés ")
Wes <- complete_data %>%
filter(str_detect(genre, "Western")) %>%
select(avg_vote, title) %>%
arrange(desc(avg_vote)) %>%
head(10)
ggplot(Wes, aes(y = avg_vote, x =fct_rev(fct_reorder(title, avg_vote,.fun="median")),color = title)) +
theme(axis.text.x = element_text(vjust=.8, hjust=1, angle=60)) +
geom_boxplot(aes(fill = title)) +
xlab("Films") +
ylab("Notes") +
ggtitle("Top 10 des films du genre\n Western les mieux notés ")
